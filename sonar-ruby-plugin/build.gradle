plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.2'
    id 'com.github.jruby-gradle.jar' version '1.6.0'
}

import com.github.jrubygradle.JRubyPrepare

ext {
    jrubyVersion = '9.2.13.0'
    rubygemsRaccVersion = '1.5.0'
    rubygemsAstVersion = '2.4.1'
    rubygemsParserVersion = '2.7.2.0'
}

processResources.from("src/main/resources", "${buildDir}/dependency_gems/gems")

dependencies {
    compileOnly 'org.sonarsource.sonarqube:sonar-plugin-api'
    compile 'org.sonarsource.analyzer-commons:sonar-analyzer-commons'
    compile project(':slang-plugin')
    compile project(':slang-checks')
    compile project(':slang-api')
    compile "org.jruby:jruby-complete:${jrubyVersion}"
    gems "rubygems:racc:${rubygemsRaccVersion}"
    gems "rubygems:ast:${rubygemsAstVersion}"
    gems "rubygems:parser:${rubygemsParserVersion}"
    testCompile project(':slang-testing')
    testCompile project(':slang-antlr')
    testCompile 'junit:junit'
    testCompile 'org.assertj:assertj-core'
    testCompile 'org.mockito:mockito-core'
    testCompile 'io.github.classgraph:classgraph'
}

task unpackDependencyGems(type: JRubyPrepare) {
    outputDir "${buildDir}/dependency_gems"
    dependencies configurations.gems
}
task copyGemsJarsFromDirectoryToShadowBugWorkaroundJar(type: Jar) {
    from "${buildDir}/dependency_gems/gems"
    includes = ['**/*.jar']
    destinationDir = file("${buildDir}/tmp")
    archiveName = "shadowBugWorkaround.jar"
}
copyGemsJarsFromDirectoryToShadowBugWorkaroundJar.dependsOn unpackDependencyGems
processResources.dependsOn copyGemsJarsFromDirectoryToShadowBugWorkaroundJar

jar {
    manifest {
        def displayVersion = (project.buildNumber == null ? version : version.substring(0, version.lastIndexOf('.')) + " (build ${project.buildNumber})")
        def buildDate = new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        attributes(
                'Build-Time': buildDate,
                'Implementation-Build': 'git rev-parse HEAD'.execute().text.trim(),
                'Plugin-BuildDate': buildDate,
                'Plugin-ChildFirstClassLoader': 'false',
                'Plugin-Class': 'org.sonarsource.ruby.plugin.RubyPlugin',
                'Plugin-Description': 'Code Analyzer for Ruby',
                'Plugin-Developers': 'SonarSource Team',
                'Plugin-Display-Version': displayVersion,
                'Plugin-Homepage': 'http://redirect.sonarsource.com/plugins/ruby.html',
                'Plugin-IssueTrackerUrl': 'https://jira.sonarsource.com/browse/SONARSLANG',
                'Plugin-Key': 'ruby',
                'Plugin-License': 'GNU LGPL 3',
                'Plugin-Name': 'Ruby Code Quality and Security',
                'Plugin-Organization': 'SonarSource',
                'Plugin-OrganizationUrl': 'http://www.sonarsource.com',
                'Plugin-SourcesUrl': 'https://github.com/SonarSource/slang',
                'Plugin-Version': version,
                'Sonar-Version': '6.7',
                'SonarLint-Supported': 'true',
                'Version': "${version}",
        )
    }
}
shadowJar {
    // shadowJar can not embed jar files, it always extract them.
    // https://imperceptiblethoughts.com/shadow/configuration/dependencies/#embedding-jar-files-inside-your-shadow-jar
    // the workaround used here, is to put jar in jar
    from file("${buildDir}/tmp/shadowBugWorkaround.jar")
    exclude "ast-${rubygemsAstVersion}/a*"
    exclude "ast-${rubygemsAstVersion}/C*"
    exclude "ast-${rubygemsAstVersion}/G*"
    exclude "ast-${rubygemsAstVersion}/L*"
    exclude "ast-${rubygemsAstVersion}/R*"
    exclude "ast-${rubygemsAstVersion}/test/**"
    exclude "ast-${rubygemsAstVersion}/.*"
    exclude 'com/headius/options/example/**'
    exclude 'com/headius/racc/**' // also exclude extracted content of racc-1.4.13-java/lib/racc/cparse-jruby.jar
    exclude 'com/jcraft/**'
    exclude 'com/kenai/**'
    exclude 'com/martiansoftware/**'
    exclude 'javax/**'
    exclude 'jni/**'
    exclude 'jnr/ffi/A*'
    exclude 'jnr/ffi/annotations/**'
    exclude 'jnr/ffi/byref/**'
    exclude 'jnr/ffi/C*'
    exclude 'jnr/ffi/L*'
    exclude 'jnr/ffi/mapper/A*'
    exclude 'jnr/ffi/mapper/C*'
    exclude 'jnr/ffi/mapper/D*'
    exclude 'jnr/ffi/mapper/Fr*'
    exclude 'jnr/ffi/mapper/FunctionMapper$*'
    exclude 'jnr/ffi/mapper/M*'
    exclude 'jnr/ffi/mapper/S*'
    exclude 'jnr/ffi/mapper/T*'
    exclude 'jnr/ffi/mapper/U*'
    exclude 'jnr/ffi/M*'
    exclude 'jnr/ffi/N*'
    exclude 'jnr/ffi/O*'
    exclude 'jnr/ffi/provider/**'
    exclude 'jnr/ffi/R*'
    exclude 'jnr/ffi/Struct$*'
    exclude 'jnr/ffi/StructL*'
    exclude 'jnr/ffi/T*'
    exclude 'jnr/ffi/types/**'
    exclude 'jnr/ffi/U*'
    exclude 'jnr/ffi/util/**'
    exclude 'jnr/ffi/V*'
    exclude 'jnr/netdb/**'
    exclude 'jnr/x86asm/**'
    exclude 'jruby/bundler/**'
    exclude 'jruby/java/java_ext/**'
    exclude 'module-info.class'
    exclude 'org/joda/time/convert/**'
    exclude 'org/joda/time/tz/data/**'
    exclude 'org/joni/bench/**'
    exclude 'org/jruby/ant/**'
    exclude 'org/jruby/api/**'
    exclude 'org/jruby/ast/java_signature/**'
    exclude 'org/jruby/compiler/util/**'
    exclude 'org/jruby/embed/**'
    exclude 'org/jruby/ext/api/**'
    exclude 'org/jruby/ext/cgi/**'
    exclude 'org/jruby/ext/date/**'
    exclude 'org/jruby/ext/digest/**'
    exclude 'org/jruby/ext/etc/**'
    exclude 'org/jruby/ext/fcntl/**'
    exclude 'org/jruby/ext/ffi/io/**'
    exclude 'org/jruby/ext/ffi/jffi/**'
    exclude 'org/jruby/ext/io/**'
    exclude 'org/jruby/ext/mathn/**'
    exclude 'org/jruby/ext/net/**'
    exclude 'org/jruby/ext/nkf/**'
    exclude 'org/jruby/ext/pathname/**'
    exclude 'org/jruby/ext/ripper/**'
    exclude 'org/jruby/ext/securerandom/**'
    exclude 'org/jruby/ext/socket/**'
    exclude 'org/jruby/ext/strscan/**'
    exclude 'org/jruby/ext/tempfile/**'
    exclude 'org/jruby/ext/timeout/**'
    exclude 'org/jruby/ext/zlib/**'
    exclude 'org/jruby/ir/instructions/boxing/**'
    exclude 'org/jruby/ir/persistence/util/**'
    exclude 'org/jruby/ir/util/**'
    exclude 'org/jruby/javasupport/bsf/**'
    exclude 'org/jruby/main/**'
    exclude 'org/jruby/org/objectweb/asm/signature/**'
    exclude 'org/jruby/org/objectweb/asm/tree/analysis/**'
    exclude 'org/jruby/runtime/callback/**'
    exclude 'org/jruby/runtime/component/**'
    exclude "parser-${rubygemsParserVersion}/bin/**"
    exclude "parser-${rubygemsParserVersion}/C*"
    exclude "parser-${rubygemsParserVersion}/doc/**"
    exclude "parser-${rubygemsParserVersion}/G*"
    exclude "parser-${rubygemsParserVersion}/lib/parser/lexer.rl"
    exclude "parser-${rubygemsParserVersion}/lib/parser/mac*"
    exclude "parser-${rubygemsParserVersion}/lib/parser/ruby1*"
    exclude "parser-${rubygemsParserVersion}/lib/parser/ruby20*"
    exclude "parser-${rubygemsParserVersion}/lib/parser/ruby21*"
    exclude "parser-${rubygemsParserVersion}/lib/parser/ruby22*"
    exclude "parser-${rubygemsParserVersion}/lib/parser/ruby23*"
    exclude "parser-${rubygemsParserVersion}/lib/parser/ruby24*"
    exclude "parser-${rubygemsParserVersion}/lib/parser/ruby25.y"
    exclude "parser-${rubygemsParserVersion}/lib/parser/ruby26*"
    exclude "parser-${rubygemsParserVersion}/lib/parser/rubym*"
    exclude "parser-${rubygemsParserVersion}/lib/parser/runner/**"
    exclude "parser-${rubygemsParserVersion}/L*"
    exclude "parser-${rubygemsParserVersion}/p*"
    exclude "parser-${rubygemsParserVersion}/R*"
    exclude "parser-${rubygemsParserVersion}/test/**"
    exclude "parser-${rubygemsParserVersion}/.*"
    exclude "racc-${rubygemsAstVersion}-java/bin/**"
    exclude "racc-${rubygemsAstVersion}-java/C*"
    exclude "racc-${rubygemsAstVersion}-java/D*"
    exclude "racc-${rubygemsAstVersion}-java/ext/**"
    exclude "racc-${rubygemsAstVersion}-java/fastcache/**"
    exclude "racc-${rubygemsAstVersion}-java/.*"
    exclude "racc-${rubygemsAstVersion}-java/M*"
    exclude "racc-${rubygemsAstVersion}-java/misc/**"
    exclude "racc-${rubygemsAstVersion}-java/R*"
    exclude "racc-${rubygemsAstVersion}-java/rdoc/**"
    exclude "racc-${rubygemsAstVersion}-java/sample/**"
    exclude "racc-${rubygemsAstVersion}-java/s*"
    exclude "racc-${rubygemsAstVersion}-java/tasks/**"
    exclude "racc-${rubygemsAstVersion}-java/test/**"
    exclude "racc-${rubygemsAstVersion}-java/web/**"
    exclude 'tables/Ca*'
    exclude 'tables/Transcoder_B*'
    exclude 'tables/Transcoder_C*'
    exclude 'tables/Transcoder_E*'
    exclude 'tables/Transcoder_G*'
    exclude 'tables/Transcoder_I*'
    exclude 'tables/Transcoder_J*'
    exclude 'tables/Transcoder_K*'
    exclude 'tables/Transcoder_N*'
    exclude 'tables/Transcoder_S*'
    exclude 'tables/Transcoder_Utf8*'
    exclude 'Test.class'
    exclude 'META-INF/jruby.home/bin/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/org/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/rdoc/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/openssl*'
    exclude 'META-INF/jruby.home/lib/ruby/gems/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/jopenssl*'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/rubygems/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/api/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/cgi/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/date/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/digest/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/etc/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/fcntl/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/ffi/io/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/ffi/jffi/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/io/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/mathn/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/net/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/nkf/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/pathname/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/ripper/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/securerandom/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/socket/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/strscan/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/tempfile/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/timeout/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/zlib/**'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/unicode*'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/web*'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/rss*'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/rss*'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/rexml*'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/psych*'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/net*'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/jline*'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/cgi*'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/drb*'
    exclude 'META-INF/jruby.home/lib/ruby/stdlib/fiddle*'
    doLast {
        enforceJarSizeAndCheckContent(new File(libsDir, shadowJar.archiveName), 12_600_000L, 13_100_000L)
    }
}

artifacts {
    archives shadowJar
}

artifactoryPublish.skip = false

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact source: shadowJar, classifier: null
            artifact sourcesJar
            artifact javadocJar
        }
    }
}
